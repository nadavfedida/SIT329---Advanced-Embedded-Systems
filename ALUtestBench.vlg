`timescale 1ns/1ns

module tb_alu;
//Inputs
  reg[1:0] A,B;
  reg[1:0] ALU_Sel;

//Outputs
  wire[3:0] ALU_Out;
  wire CarryOut;
 // Verilog code for ALU
 alu test_unit(
            A,B,  // ALU 8-bit Inputs                 
            ALU_Sel,// ALU Selection
            ALU_Out, // ALU 8-bit Output
            CarryOut // Carry Out Flag
     );
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(1, tb_alu);
  end
  
    initial begin
      	
        A = 2'b01;; // 1
        B = 2'b11;; // 3
        ALU_Sel = 2'b00; // 00+, 01-, 10*, 11/
        #10
      	$display(" A = %d, B = %d, RESULT = %d, CarryOut = ", A, B,ALU_Out, CarryOut);
      	
        A = 2'b00; // 0
        B = 2'b10; // 2
        ALU_Sel = 2'b00; // 00+, 01-, 10*, 11/
        #10
      	$display(" A = %d, B = %d, RESULT = %d, CarryOut = ", A, B,ALU_Out, CarryOut);

        A = 2'b11; // 3
        B = 2'b00; // 0
        ALU_Sel = 2'b10; // 00+, 01-, 10*, 11/
        #10
      	$display(" A = %d, B = %d, RESULT = %d, CarryOut = ", A, B,ALU_Out, CarryOut);
      	
        A = 2'b10; // 2
        B = 2'b11; // 3
        ALU_Sel = 2'b10; // 00+, 01-, 10*, 11/
        #10
     	$display(" A = %d, B = %d, RESULT = %d, CarryOut = ", A, B,ALU_Out, CarryOut);
      
        A = 2'b11; // 3
        B = 2'b11; // 3
        ALU_Sel = 2'b11; // 00+, 01-, 10*, 11/
        #10
        $display(" A = %d, B = %d, RESULT = %d, CarryOut = ", A, B,ALU_Out, CarryOut);
      	$finish();
    end
endmodule